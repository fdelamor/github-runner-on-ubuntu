#cloud-config:
package_update: true
package_upgrade: true

packages: 
  # Required for GitHub runner 
  - zlib1g
  - libssl1.1
  - libicu60
  - libkrb5-3
  - liblttng-ust-ctl4 
  - liblttng-ust0 
  - liburcu6
  # Required for Docker 
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  # Required for the token extraction below 
  - jq

runcmd:
  # Steps for Docker 
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get -y update 
  - apt-get -y install docker-ce docker-ce-cli containerd.io
  - systemctl start docker
  - systemctl enable docker
  # I don't need to add this user to the group but I will just in case I ssh in for troubleshooting something
  - usermod -a -G docker ghrunner
  # Creating a build-cache folder so I can use it later in my workflows. I don't need to do this as the workflow creates it automatically but I like to be explicit.
  - mkdir /build-cache 
  # Steps for GitHub runner 
  - mkdir /actions-runner
  - cd /actions-runner
  # Thanks to https://developer.github.com/v3/actions/self-hosted-runners/ for the GitHub API stuff
  - 'RUNNERTOKEN=$(curl -s -XPOST -H "authorization: token _REPLACETOKEN_" https://api.github.com/repos/_REPLACEREPO_/actions/runners/registration-token | jq -r .token)'
  - curl -s -O -L https://github.com/actions/runner/releases/download/v_REPLACEVER_/actions-runner-linux-x64-_REPLACEVER_.tar.gz
  - tar xzf ./actions-runner-linux-x64-_REPLACEVER_.tar.gz
  # I need to put RUNNER_ALLOW_RUNASROOT=1 to allow the below to run as root (because that's what happens since the runner is configured & run as part of cloud-init)
  # The ghrunner user is not really used except for me to SSH into it if needed
  - RUNNER_ALLOW_RUNASROOT=1 ./config.sh --url https://github.com/_REPLACEREPO_ --token $RUNNERTOKEN --unattended
  # I used to run the runner immediately but now I want to make it a service so I can reuse the VM and cache later
  # - RUNNER_ALLOW_RUNASROOT=1 ./run.sh --unattended
  - RUNNER_ALLOW_RUNASROOT=1 ./svc.sh install 
  - RUNNER_ALLOW_RUNASROOT=1 ./svc.sh start
  - RUNNER_ALLOW_RUNASROOT=1 ./svc.sh status
  - chown -R ghrunner /actions-runner 
  - chown -R ghrunner /build-cache